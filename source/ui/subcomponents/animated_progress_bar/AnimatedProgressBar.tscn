[gd_scene load_steps=5 format=2]

[ext_resource path="res://assets/fonts/Ubuntu-Regular_16.tres" type="DynamicFont" id=1]
[ext_resource path="res://assets/styleboxes/empty.tres" type="StyleBox" id=2]

[sub_resource type="GDScript" id=2]
script/source = "extends PanelContainer

export(Color) var color 
export(bool) var show_percentage
export(bool) var show_value

var max_value := 0.0
var value := 0.0
var new_value := 0.0

onready var progress_bar := $ProgressBar
onready var progress_label := $Label
onready var tween := $Tween


func update_ui(_value, _max_value):
	if _max_value == max_value:
		if new_value != _value:
			update_component(float(_value))
	else:
		configure_component(float(_max_value), float(_value))
		
func configure_component(_max_value, _value):
	max_value = _max_value
	value = _value
#	var new_fg = StyleBoxFlat.new()
	var new_fg = progress_bar.get(\"custom_styles/fg\").duplicate()
	new_fg.bg_color = color
	progress_bar.set(\"custom_styles/fg\", new_fg) 
	apply_update()

func apply_update():
	# PROGRESS BAR
	progress_bar.value = value
	progress_bar.max_value = max_value
	# LABEL
	var value_text := \"\"
	var percentage_text := \"\"
	if show_value:
		value_text = \"%s/%s\" % [int(value), int(max_value)]
	if show_percentage and show_value:
		percentage_text = \" (%s%%)\" % int(value / (max_value / 100.0))
	if show_percentage and not show_value:
		percentage_text = \"%s%%\" % int(value / (max_value / 100.0))
	progress_label.text = \"%s%s\" % [value_text, percentage_text]
	
func update_component(_value):
	new_value = _value
	var animation_time = 0.5
	tween.stop_all()
	tween.remove_all()
	tween.interpolate_property(self, \"value\", value, _value, animation_time, Tween.TRANS_LINEAR, Tween.EASE_IN)
	tween.start()

func set_hud_font(_font):
	$Label.set(\"custom_fonts/font\", _font)

func _on_Tween_tween_step(_object: Object, _key: NodePath, _elapsed: float, _value: Object) -> void:
	apply_update()
"

[sub_resource type="StyleBoxFlat" id=3]
border_width_left = 3
border_width_top = 3
border_width_right = 3
border_width_bottom = 3
border_color = Color( 0.8, 0.8, 0.8, 0 )
corner_radius_top_left = 5
corner_radius_top_right = 5
corner_radius_bottom_right = 5
corner_radius_bottom_left = 5

[node name="AnimatedProgressBar" type="PanelContainer"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -25.5
margin_top = -10.5
margin_right = 25.5
margin_bottom = 10.5
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 3
size_flags_vertical = 3
custom_styles/panel = ExtResource( 2 )
script = SubResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}
color = Color( 0.235294, 0.752941, 0.0901961, 1 )
show_percentage = true
show_value = true

[node name="ProgressBar" type="ProgressBar" parent="."]
margin_right = 51.0
margin_bottom = 21.0
mouse_filter = 2
size_flags_horizontal = 3
size_flags_vertical = 3
custom_styles/fg = SubResource( 3 )
value = 45.0
percent_visible = false

[node name="Label" type="Label" parent="."]
margin_right = 51.0
margin_bottom = 21.0
size_flags_horizontal = 3
size_flags_vertical = 3
custom_fonts/font = ExtResource( 1 )
text = "[text]"
align = 1
valign = 1

[node name="Tween" type="Tween" parent="."]

[connection signal="tween_step" from="Tween" to="." method="_on_Tween_tween_step"]
